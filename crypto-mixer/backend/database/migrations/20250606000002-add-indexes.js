/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 * –°–æ–∑–¥–∞–Ω–∞: 2025-06-06T00:00:02.000Z
 */

module.exports = {
  /**
   * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ - —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
   */
  async up(queryInterface, Sequelize) {
    console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏...');

    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è mix_requests
    await queryInterface.addIndex('mix_requests', ['session_id'], {
      unique: true,
      name: 'mix_requests_session_id_unique'
    });

    await queryInterface.addIndex('mix_requests', ['currency', 'status'], {
      name: 'mix_requests_currency_status_idx'
    });

    await queryInterface.addIndex('mix_requests', ['deposit_address'], {
      unique: true,
      name: 'mix_requests_deposit_address_unique'
    });

    await queryInterface.addIndex('mix_requests', ['deposit_tx_hash'], {
      unique: true,
      name: 'mix_requests_deposit_tx_hash_unique',
      where: {
        deposit_tx_hash: { [Sequelize.Op.ne]: null }
      }
    });

    await queryInterface.addIndex('mix_requests', ['created_at'], {
      name: 'mix_requests_created_at_idx'
    });

    await queryInterface.addIndex('mix_requests', ['expires_at'], {
      name: 'mix_requests_expires_at_idx'
    });

    await queryInterface.addIndex('mix_requests', ['status', 'created_at'], {
      name: 'mix_requests_status_created_at_idx'
    });

    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è deposit_addresses
    await queryInterface.addIndex('deposit_addresses', ['mix_request_id'], {
      unique: true,
      name: 'deposit_addresses_mix_request_id_unique'
    });

    await queryInterface.addIndex('deposit_addresses', ['currency', 'used'], {
      name: 'deposit_addresses_currency_used_idx'
    });

    await queryInterface.addIndex('deposit_addresses', ['currency', 'address_index'], {
      name: 'deposit_addresses_currency_index_idx'
    });

    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è output_transactions
    await queryInterface.addIndex('output_transactions', ['mix_request_id'], {
      name: 'output_transactions_mix_request_id_idx'
    });

    await queryInterface.addIndex('output_transactions', ['output_address'], {
      name: 'output_transactions_output_address_idx'
    });

    await queryInterface.addIndex('output_transactions', ['tx_hash'], {
      unique: true,
      name: 'output_transactions_tx_hash_unique',
      where: {
        tx_hash: { [Sequelize.Op.ne]: null }
      }
    });

    await queryInterface.addIndex('output_transactions', ['currency', 'status'], {
      name: 'output_transactions_currency_status_idx'
    });

    await queryInterface.addIndex('output_transactions', ['scheduled_at'], {
      name: 'output_transactions_scheduled_at_idx'
    });

    await queryInterface.addIndex('output_transactions', ['status', 'retry_count'], {
      name: 'output_transactions_status_retry_idx'
    });

    await queryInterface.addIndex('output_transactions', ['priority', 'scheduled_at'], {
      name: 'output_transactions_priority_scheduled_idx'
    });

    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è wallets
    await queryInterface.addIndex('wallets', ['currency', 'wallet_type'], {
      name: 'wallets_currency_type_idx'
    });

    await queryInterface.addIndex('wallets', ['currency', 'active'], {
      name: 'wallets_currency_active_idx'
    });

    await queryInterface.addIndex('wallets', ['wallet_type', 'active', 'priority'], {
      name: 'wallets_type_active_priority_idx'
    });

    await queryInterface.addIndex('wallets', ['balance'], {
      name: 'wallets_balance_idx'
    });

    await queryInterface.addIndex('wallets', ['currency', 'balance'], {
      name: 'wallets_currency_balance_idx',
      where: {
        active: true
      }
    });

    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è monitored_addresses
    await queryInterface.addIndex('monitored_addresses', ['currency', 'address'], {
      unique: true,
      name: 'monitored_addresses_currency_address_unique'
    });

    await queryInterface.addIndex('monitored_addresses', ['mix_request_id'], {
      unique: true,
      name: 'monitored_addresses_mix_request_id_unique'
    });

    await queryInterface.addIndex('monitored_addresses', ['active', 'currency'], {
      name: 'monitored_addresses_active_currency_idx'
    });

    await queryInterface.addIndex('monitored_addresses', ['expires_at'], {
      name: 'monitored_addresses_expires_at_idx'
    });

    await queryInterface.addIndex('monitored_addresses', ['currency', 'active', 'last_checked_at'], {
      name: 'monitored_addresses_monitoring_idx'
    });

    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è transaction_pool
    await queryInterface.addIndex('transaction_pool', ['currency', 'used'], {
      name: 'transaction_pool_currency_used_idx'
    });

    await queryInterface.addIndex('transaction_pool', ['source_mix_request_id'], {
      name: 'transaction_pool_source_mix_request_id_idx'
    });

    await queryInterface.addIndex('transaction_pool', ['currency', 'pool_type', 'used'], {
      name: 'transaction_pool_currency_type_used_idx'
    });

    await queryInterface.addIndex('transaction_pool', ['expires_at'], {
      name: 'transaction_pool_expires_at_idx'
    });

    await queryInterface.addIndex('transaction_pool', ['mixing_group_id'], {
      name: 'transaction_pool_mixing_group_id_idx'
    });

    await queryInterface.addIndex('transaction_pool', ['priority', 'added_at'], {
      name: 'transaction_pool_priority_added_idx'
    });

    await queryInterface.addIndex('transaction_pool', ['currency', 'amount', 'used'], {
      name: 'transaction_pool_currency_amount_used_idx'
    });

    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è blockchain_transactions
    await queryInterface.addIndex('blockchain_transactions', ['currency', 'status'], {
      name: 'blockchain_transactions_currency_status_idx'
    });

    await queryInterface.addIndex('blockchain_transactions', ['from_address'], {
      name: 'blockchain_transactions_from_address_idx'
    });

    await queryInterface.addIndex('blockchain_transactions', ['to_address'], {
      name: 'blockchain_transactions_to_address_idx'
    });

    await queryInterface.addIndex('blockchain_transactions', ['currency', 'block_number'], {
      name: 'blockchain_transactions_currency_block_idx'
    });

    await queryInterface.addIndex('blockchain_transactions', ['transaction_type', 'currency'], {
      name: 'blockchain_transactions_type_currency_idx'
    });

    await queryInterface.addIndex('blockchain_transactions', ['confirmed_at'], {
      name: 'blockchain_transactions_confirmed_at_idx'
    });

    await queryInterface.addIndex('blockchain_transactions', ['currency', 'created_at'], {
      name: 'blockchain_transactions_currency_created_idx'
    });

    // –ö–æ–º–ø–æ–∑–∏—Ç–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —á–∞—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    await queryInterface.addIndex('blockchain_transactions', ['currency', 'to_address', 'status'], {
      name: 'blockchain_transactions_currency_to_status_idx'
    });

    await queryInterface.addIndex('blockchain_transactions', ['currency', 'from_address', 'status'], {
      name: 'blockchain_transactions_currency_from_status_idx'
    });

    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è system_config
    await queryInterface.addIndex('system_config', ['category'], {
      name: 'system_config_category_idx'
    });

    await queryInterface.addIndex('system_config', ['is_critical'], {
      name: 'system_config_is_critical_idx'
    });

    await queryInterface.addIndex('system_config', ['environment'], {
      name: 'system_config_environment_idx'
    });

    await queryInterface.addIndex('system_config', ['category', 'environment'], {
      name: 'system_config_category_environment_idx'
    });

    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è audit_log
    await queryInterface.addIndex('audit_log', ['event_type', 'created_at'], {
      name: 'audit_log_event_type_created_idx'
    });

    await queryInterface.addIndex('audit_log', ['severity', 'created_at'], {
      name: 'audit_log_severity_created_idx'
    });

    await queryInterface.addIndex('audit_log', ['operation_status'], {
      name: 'audit_log_operation_status_idx'
    });

    await queryInterface.addIndex('audit_log', ['session_id'], {
      name: 'audit_log_session_id_idx'
    });

    await queryInterface.addIndex('audit_log', ['user_id'], {
      name: 'audit_log_user_id_idx'
    });

    await queryInterface.addIndex('audit_log', ['service_name', 'event_type'], {
      name: 'audit_log_service_event_idx'
    });

    await queryInterface.addIndex('audit_log', ['ip_address'], {
      name: 'audit_log_ip_address_idx'
    });

    // –ö–æ–º–ø–æ–∑–∏—Ç–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —á–∞—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∞—É–¥–∏—Ç–∞
    await queryInterface.addIndex('audit_log', ['event_type', 'operation_status', 'created_at'], {
      name: 'audit_log_event_status_created_idx'
    });

    await queryInterface.addIndex('audit_log', ['severity', 'service_name', 'created_at'], {
      name: 'audit_log_severity_service_created_idx'
    });

    console.log('‚úÖ –í—Å–µ –∏–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
  },

  /**
   * –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ - —É–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
   */
  async down(queryInterface, Sequelize) {
    console.log('üîÑ –£–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...');

    // –£–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    const indexesToDrop = [
      // audit_log –∏–Ω–¥–µ–∫—Å—ã
      'audit_log_severity_service_created_idx',
      'audit_log_event_status_created_idx',
      'audit_log_ip_address_idx',
      'audit_log_service_event_idx',
      'audit_log_user_id_idx',
      'audit_log_session_id_idx',
      'audit_log_operation_status_idx',
      'audit_log_severity_created_idx',
      'audit_log_event_type_created_idx',

      // system_config –∏–Ω–¥–µ–∫—Å—ã
      'system_config_category_environment_idx',
      'system_config_environment_idx',
      'system_config_is_critical_idx',
      'system_config_category_idx',

      // blockchain_transactions –∏–Ω–¥–µ–∫—Å—ã
      'blockchain_transactions_currency_from_status_idx',
      'blockchain_transactions_currency_to_status_idx',
      'blockchain_transactions_currency_created_idx',
      'blockchain_transactions_confirmed_at_idx',
      'blockchain_transactions_type_currency_idx',
      'blockchain_transactions_currency_block_idx',
      'blockchain_transactions_to_address_idx',
      'blockchain_transactions_from_address_idx',
      'blockchain_transactions_currency_status_idx',

      // transaction_pool –∏–Ω–¥–µ–∫—Å—ã
      'transaction_pool_currency_amount_used_idx',
      'transaction_pool_priority_added_idx',
      'transaction_pool_mixing_group_id_idx',
      'transaction_pool_expires_at_idx',
      'transaction_pool_currency_type_used_idx',
      'transaction_pool_source_mix_request_id_idx',
      'transaction_pool_currency_used_idx',

      // monitored_addresses –∏–Ω–¥–µ–∫—Å—ã
      'monitored_addresses_monitoring_idx',
      'monitored_addresses_expires_at_idx',
      'monitored_addresses_active_currency_idx',
      'monitored_addresses_mix_request_id_unique',
      'monitored_addresses_currency_address_unique',

      // wallets –∏–Ω–¥–µ–∫—Å—ã
      'wallets_currency_balance_idx',
      'wallets_balance_idx',
      'wallets_type_active_priority_idx',
      'wallets_currency_active_idx',
      'wallets_currency_type_idx',

      // output_transactions –∏–Ω–¥–µ–∫—Å—ã
      'output_transactions_priority_scheduled_idx',
      'output_transactions_status_retry_idx',
      'output_transactions_scheduled_at_idx',
      'output_transactions_currency_status_idx',
      'output_transactions_tx_hash_unique',
      'output_transactions_output_address_idx',
      'output_transactions_mix_request_id_idx',

      // deposit_addresses –∏–Ω–¥–µ–∫—Å—ã
      'deposit_addresses_currency_index_idx',
      'deposit_addresses_currency_used_idx',
      'deposit_addresses_mix_request_id_unique',

      // mix_requests –∏–Ω–¥–µ–∫—Å—ã
      'mix_requests_status_created_at_idx',
      'mix_requests_expires_at_idx',
      'mix_requests_created_at_idx',
      'mix_requests_deposit_tx_hash_unique',
      'mix_requests_deposit_address_unique',
      'mix_requests_currency_status_idx',
      'mix_requests_session_id_unique'
    ];

    for (const indexName of indexesToDrop) {
      try {
        await queryInterface.removeIndex('audit_log', indexName);
      } catch (error) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (!error.message.includes('does not exist')) {
          console.warn(`–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–∞ ${indexName}:`, error.message);
        }
      }
    }

    console.log('‚úÖ –í—Å–µ –∏–Ω–¥–µ–∫—Å—ã —É–¥–∞–ª–µ–Ω—ã');
  }
};